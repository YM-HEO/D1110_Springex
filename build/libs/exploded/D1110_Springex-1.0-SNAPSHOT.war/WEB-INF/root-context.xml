<?xml version="1.0" encoding="UTF-8"?>
<!-- XML : 태그(ex bean) 마크업 기호를 사용하여 데이터를 정의 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">


    <!-- hikari config 설정 -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="driverClassName" value="org.mariadb.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mariadb://localhost:3305/webdb"></property>
        <property name="username" value="webuser"></property>
        <property name="password" value="webuser"></property>
        <property name="dataSourceProperties">
            <props>
                <prop key="cachePrepStmts">true</prop>
                <prop key="prepStmtCacheSize">250</prop>
                <prop key="prepStmtCacheSqlLimit">2048</prop>
            </props>
        </property>
    </bean>

    <!-- hikari dataSource class 설정 -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
          destroy-method="close">
        <constructor-arg ref="hikariConfig" />
    </bean>

    <!-- myBatis SQL 처리 sessionFactory(핵심객체) 설정 -->
 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
     <!--  XML로 SQL분리방법 3. Bean&Mapping 등록(classpath=resources) -->
     <property name="mapperLocations" value="classpath:/mappers/**/*.xml"/>
 </bean>

    <!-- myBatis  -->
    <mybatis:scan base-package="net.ict.d1110_springex.mapper"/>

    <!-- Bean 등록 -->
    <context:component-scan base-package="net.ict.d1110_springex.config"/>
    <context:component-scan base-package="net.ict.d1110_springex.service"/>

</beans>